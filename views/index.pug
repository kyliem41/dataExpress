extends layout

block content
  h1= title
  p Welcome to #{title}
  br 
  br
  div 
    canvas(id="myChartCookies", width=400, height=150)
  div 
    canvas(id="myChartColor", width=400, height=150)
  div 
    canvas(id="myChartLang", width=400, height=150)
  script(src="https://cdn.jsdelivr.net/npm/chart.js")
  script(src="/client.js" defer)

  script.
    async function fetchChartData() {
      try {
        const response = await fetch('/api');
        const data = await response.json();
        createCharts(data);
      } catch (err) {
        console.log(err);
      }
    }

    function createCharts(stats) {
      createChartCookie('myChartCookies', stats[0]);
      createChartColor('myChartColor', stats[1]);
      createChartLang('myChartLang', stats[2]);
    }

    function createChartCookie(canvasId, chartData) {
      const ctx = document.getElementById(canvasId);
      new Chart(ctx, {
        type: 'bar', 
        data: {
          labels: chartData.options,
          datasets: [{
            label: '# of votes',
            data: chartData.votes,
            backgroundColor: '#97D8C4',
            borderColor: 'black', 
            borderWidth: 1
          }]
        },
        options: {
          plugins: {
            title: {
              display: true,
              text: chartData.question + ' Table',
              color: 'black'
            }
          },
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }

    function createChartColor(canvasId, chartData) {
      const ctx = document.getElementById(canvasId);
      new Chart(ctx, {
        type: 'bar', 
        data: {
          labels: chartData.options,
          datasets: [{
            label: '# of votes',
            data: chartData.votes,
            backgroundColor: '#E7BBE3',
            borderColor: 'black', 
            borderWidth: 1
          }]
        },
        options: {
          plugins: {
            title: {
              display: true,
              text: chartData.question + ' Table',
              color: 'black'
            }
          },
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }

    function createChartLang(canvasId, chartData) {
      const ctx = document.getElementById(canvasId);
      new Chart(ctx, {
        type: 'bar', 
        data: {
          labels: chartData.options,
          datasets: [{
            label: '# of votes',
            data: chartData.votes,
            backgroundColor: '#7CC6FE',
            borderColor: 'black', 
            borderWidth: 1
          }]
        },
        options: {
          plugins: {
            title: {
              display: true,
              text: chartData.question + ' Table',
              color: 'black'
            }
          },
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }

    fetchChartData();